/*
 * generated by Xtext 2.15.0
 */
package it.univaq.disim.typhon.scoping

import org.eclipse.xtext.scoping.IScope
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import typhonml.GraphEdge

import typhonml.TyphonmlPackage
import java.util.List
import javax.management.relation.Relation
import org.eclipse.xtext.scoping.Scopes

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class TyphonMLScopeProvider extends AbstractTyphonMLScopeProvider {

	override IScope getScope(EObject context, EReference reference) {
		val literals = TyphonmlPackage.Literals.ENTITY__RELATIONS
		
		println(context)
		println(literals)
		println(reference)
		println("----------------")
		if (reference == TyphonmlPackage.Literals.GRAPH_EDGE__FROM) {
			if (context instanceof GraphEdge) {
				val result = context.entity.relations 
				return Scopes.scopeFor(result)
			}
		}
		if (reference == TyphonmlPackage.Literals.GRAPH_EDGE__TO) {
			if (context instanceof GraphEdge) {
				val result = context.entity.relations 
				return Scopes.scopeFor(result)
			}
		}
		return super.getScope(context, reference)
	}
}
