/*
 * generated by Xtext 2.14.0
 */
package org.typhon.dsls.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TyphonMLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDataTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDataTypesDataTypeParserRuleCall_1_0 = (RuleCall)cDataTypesAssignment_1.eContents().get(0);
		private final Assignment cDatabasesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDatabasesDatabaseParserRuleCall_2_0 = (RuleCall)cDatabasesAssignment_2.eContents().get(0);
		
		//Model:
		//	{Model} dataTypes+=DataType*
		//	databases+=Database*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Model} dataTypes+=DataType* databases+=Database*
		public Group getGroup() { return cGroup; }
		
		//{Model}
		public Action getModelAction_0() { return cModelAction_0; }
		
		//dataTypes+=DataType*
		public Assignment getDataTypesAssignment_1() { return cDataTypesAssignment_1; }
		
		//DataType
		public RuleCall getDataTypesDataTypeParserRuleCall_1_0() { return cDataTypesDataTypeParserRuleCall_1_0; }
		
		//databases+=Database*
		public Assignment getDatabasesAssignment_2() { return cDatabasesAssignment_2; }
		
		//Database
		public RuleCall getDatabasesDatabaseParserRuleCall_2_0() { return cDatabasesDatabaseParserRuleCall_2_0; }
	}
	public class DatabaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.Database");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRelationalDBParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGraphDBParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDocumentDBParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cKeyValueDBParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Database:
		//	RelationalDB | GraphDB | DocumentDB | KeyValueDB;
		@Override public ParserRule getRule() { return rule; }
		
		//RelationalDB | GraphDB | DocumentDB | KeyValueDB
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RelationalDB
		public RuleCall getRelationalDBParserRuleCall_0() { return cRelationalDBParserRuleCall_0; }
		
		//GraphDB
		public RuleCall getGraphDBParserRuleCall_1() { return cGraphDBParserRuleCall_1; }
		
		//DocumentDB
		public RuleCall getDocumentDBParserRuleCall_2() { return cDocumentDBParserRuleCall_2; }
		
		//KeyValueDB
		public RuleCall getKeyValueDBParserRuleCall_3() { return cKeyValueDBParserRuleCall_3; }
	}
	public class KeyValueDBElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.KeyValueDB");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKeyValueDBAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKeyvaluedbKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsKeyValueElementParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//KeyValueDB:
		//	{KeyValueDB}
		//	'keyvaluedb' name=ID '{'
		//	elements+=KeyValueElement*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{KeyValueDB} 'keyvaluedb' name=ID '{' elements+=KeyValueElement* '}'
		public Group getGroup() { return cGroup; }
		
		//{KeyValueDB}
		public Action getKeyValueDBAction_0() { return cKeyValueDBAction_0; }
		
		//'keyvaluedb'
		public Keyword getKeyvaluedbKeyword_1() { return cKeyvaluedbKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//elements+=KeyValueElement*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }
		
		//KeyValueElement
		public RuleCall getElementsKeyValueElementParserRuleCall_4_0() { return cElementsKeyValueElementParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class KeyValueElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.KeyValueElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKeyValueElementAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeyIDTerminalRuleCall_1_0 = (RuleCall)cKeyAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cEntityEntityCrossReference_3_0 = (CrossReference)cEntityAssignment_3.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cEntityEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValuesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cValuesDataTypeCrossReference_5_0 = (CrossReference)cValuesAssignment_5.eContents().get(0);
		private final RuleCall cValuesDataTypeEStringParserRuleCall_5_0_1 = (RuleCall)cValuesDataTypeCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//KeyValueElement:
		//	{KeyValueElement} key=ID '->' entity=[Entity] '{'
		//	values+=[DataType|EString]?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{KeyValueElement} key=ID '->' entity=[Entity] '{' values+=[DataType|EString]? '}'
		public Group getGroup() { return cGroup; }
		
		//{KeyValueElement}
		public Action getKeyValueElementAction_0() { return cKeyValueElementAction_0; }
		
		//key=ID
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }
		
		//ID
		public RuleCall getKeyIDTerminalRuleCall_1_0() { return cKeyIDTerminalRuleCall_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_3() { return cEntityAssignment_3; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_3_0() { return cEntityEntityCrossReference_3_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_3_0_1() { return cEntityEntityIDTerminalRuleCall_3_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//values+=[DataType|EString]?
		public Assignment getValuesAssignment_5() { return cValuesAssignment_5; }
		
		//[DataType|EString]
		public CrossReference getValuesDataTypeCrossReference_5_0() { return cValuesDataTypeCrossReference_5_0; }
		
		//EString
		public RuleCall getValuesDataTypeEStringParserRuleCall_5_0_1() { return cValuesDataTypeEStringParserRuleCall_5_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DocumentDBElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.DocumentDB");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDocumentDBAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDocumentdbKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCollectionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCollectionsDocumentDBCollectionParserRuleCall_4_0 = (RuleCall)cCollectionsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DocumentDB:
		//	{DocumentDB}
		//	'documentdb' name=ID '{'
		//	collections+=DocumentDBCollection*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DocumentDB} 'documentdb' name=ID '{' collections+=DocumentDBCollection* '}'
		public Group getGroup() { return cGroup; }
		
		//{DocumentDB}
		public Action getDocumentDBAction_0() { return cDocumentDBAction_0; }
		
		//'documentdb'
		public Keyword getDocumentdbKeyword_1() { return cDocumentdbKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//collections+=DocumentDBCollection*
		public Assignment getCollectionsAssignment_4() { return cCollectionsAssignment_4; }
		
		//DocumentDBCollection
		public RuleCall getCollectionsDocumentDBCollectionParserRuleCall_4_0() { return cCollectionsDocumentDBCollectionParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DocumentDBCollectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.DocumentDBCollection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCollectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cEntityEntityCrossReference_3_0 = (CrossReference)cEntityAssignment_3.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cEntityEntityCrossReference_3_0.eContents().get(1);
		
		//DocumentDBCollection Collection:
		//	{Collection} name=ID ':' entity=[Entity];
		@Override public ParserRule getRule() { return rule; }
		
		//{Collection} name=ID ':' entity=[Entity]
		public Group getGroup() { return cGroup; }
		
		//{Collection}
		public Action getCollectionAction_0() { return cCollectionAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_3() { return cEntityAssignment_3; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_3_0() { return cEntityEntityCrossReference_3_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_3_0_1() { return cEntityEntityIDTerminalRuleCall_3_0_1; }
	}
	public class RelationalDBElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.RelationalDB");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelationalDBAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRelationaldbKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTablesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTablesTableParserRuleCall_4_0 = (RuleCall)cTablesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RelationalDB:
		//	{RelationalDB}
		//	'relationaldb' name=ID '{'
		//	tables+=Table*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RelationalDB} 'relationaldb' name=ID '{' tables+=Table* '}'
		public Group getGroup() { return cGroup; }
		
		//{RelationalDB}
		public Action getRelationalDBAction_0() { return cRelationalDBAction_0; }
		
		//'relationaldb'
		public Keyword getRelationaldbKeyword_1() { return cRelationaldbKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//tables+=Table*
		public Assignment getTablesAssignment_4() { return cTablesAssignment_4; }
		
		//Table
		public RuleCall getTablesTableParserRuleCall_4_0() { return cTablesTableParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.Table");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEntityAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cEntityEntityCrossReference_5_0 = (CrossReference)cEntityAssignment_5.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_5_0_1 = (RuleCall)cEntityEntityCrossReference_5_0.eContents().get(1);
		private final Assignment cIndexSpecAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIndexSpecIndexSpecParserRuleCall_6_0 = (RuleCall)cIndexSpecAssignment_6.eContents().get(0);
		private final Assignment cIdSpecAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cIdSpecIdSpecParserRuleCall_7_0 = (RuleCall)cIdSpecAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Table:
		//	{Table}
		//	'table' '{'
		//	name=ID ':' entity=[Entity] indexSpec=IndexSpec?
		//	idSpec=IdSpec?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Table} 'table' '{' name=ID ':' entity=[Entity] indexSpec=IndexSpec? idSpec=IdSpec? '}'
		public Group getGroup() { return cGroup; }
		
		//{Table}
		public Action getTableAction_0() { return cTableAction_0; }
		
		//'table'
		public Keyword getTableKeyword_1() { return cTableKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_5() { return cEntityAssignment_5; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_5_0() { return cEntityEntityCrossReference_5_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_5_0_1() { return cEntityEntityIDTerminalRuleCall_5_0_1; }
		
		//indexSpec=IndexSpec?
		public Assignment getIndexSpecAssignment_6() { return cIndexSpecAssignment_6; }
		
		//IndexSpec
		public RuleCall getIndexSpecIndexSpecParserRuleCall_6_0() { return cIndexSpecIndexSpecParserRuleCall_6_0; }
		
		//idSpec=IdSpec?
		public Assignment getIdSpecAssignment_7() { return cIdSpecAssignment_7; }
		
		//IdSpec
		public RuleCall getIdSpecIdSpecParserRuleCall_7_0() { return cIdSpecIdSpecParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class IndexSpecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.IndexSpec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIndexSpecAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIndexKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAttributesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cAttributesAttributeCrossReference_4_0 = (CrossReference)cAttributesAssignment_4.eContents().get(0);
		private final RuleCall cAttributesAttributeSTRINGTerminalRuleCall_4_0_1 = (RuleCall)cAttributesAttributeCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//IndexSpec:
		//	{IndexSpec}
		//	'index' name=ID '{'
		//	attributes+=[Attribute|STRING]*
		//	// (references+=[Attribute|STRING])*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{IndexSpec} 'index' name=ID '{' attributes+=[Attribute|STRING]* // (references+=[Attribute|STRING])*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{IndexSpec}
		public Action getIndexSpecAction_0() { return cIndexSpecAction_0; }
		
		//'index'
		public Keyword getIndexKeyword_1() { return cIndexKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//attributes+=[Attribute|STRING]*
		public Assignment getAttributesAssignment_4() { return cAttributesAssignment_4; }
		
		//[Attribute|STRING]
		public CrossReference getAttributesAttributeCrossReference_4_0() { return cAttributesAttributeCrossReference_4_0; }
		
		//STRING
		public RuleCall getAttributesAttributeSTRINGTerminalRuleCall_4_0_1() { return cAttributesAttributeSTRINGTerminalRuleCall_4_0_1; }
		
		//// (references+=[Attribute|STRING])*
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class IdSpecElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.IdSpec");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIdSpecAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIdKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAttributesAttributeCrossReference_3_0 = (CrossReference)cAttributesAssignment_3.eContents().get(0);
		private final RuleCall cAttributesAttributeSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cAttributesAttributeCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//IdSpec:
		//	{IdSpec}
		//	'id' '{'
		//	attributes+=[Attribute|STRING]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{IdSpec} 'id' '{' attributes+=[Attribute|STRING]* '}'
		public Group getGroup() { return cGroup; }
		
		//{IdSpec}
		public Action getIdSpecAction_0() { return cIdSpecAction_0; }
		
		//'id'
		public Keyword getIdKeyword_1() { return cIdKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attributes+=[Attribute|STRING]*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//[Attribute|STRING]
		public CrossReference getAttributesAttributeCrossReference_3_0() { return cAttributesAttributeCrossReference_3_0; }
		
		//STRING
		public RuleCall getAttributesAttributeSTRINGTerminalRuleCall_3_0_1() { return cAttributesAttributeSTRINGTerminalRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class GraphDBElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.GraphDB");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphDBAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGraphdbKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNodesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNodesNodeParserRuleCall_4_0 = (RuleCall)cNodesAssignment_4.eContents().get(0);
		private final Assignment cEdgesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEdgesEdgeParserRuleCall_5_0 = (RuleCall)cEdgesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GraphDB:
		//	{GraphDB}
		//	'graphdb' name=ID '{'
		//	nodes+=Node*
		//	edges+=Edge*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphDB} 'graphdb' name=ID '{' nodes+=Node* edges+=Edge* '}'
		public Group getGroup() { return cGroup; }
		
		//{GraphDB}
		public Action getGraphDBAction_0() { return cGraphDBAction_0; }
		
		//'graphdb'
		public Keyword getGraphdbKeyword_1() { return cGraphdbKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//nodes+=Node*
		public Assignment getNodesAssignment_4() { return cNodesAssignment_4; }
		
		//Node
		public RuleCall getNodesNodeParserRuleCall_4_0() { return cNodesNodeParserRuleCall_4_0; }
		
		//edges+=Edge*
		public Assignment getEdgesAssignment_5() { return cEdgesAssignment_5; }
		
		//Edge
		public RuleCall getEdgesEdgeParserRuleCall_5_0() { return cEdgesEdgeParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class NodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.Node");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cEntityEntityCrossReference_4_0 = (CrossReference)cEntityAssignment_4.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_4_0_1 = (RuleCall)cEntityEntityCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAttributesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAttributesGraphAttributeParserRuleCall_6_0 = (RuleCall)cAttributesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Node GraphNode:
		//	{GraphNode}
		//	'node' name=ID ':' entity=[Entity] '{'
		//	attributes+=GraphAttribute*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphNode} 'node' name=ID ':' entity=[Entity] '{' attributes+=GraphAttribute* '}'
		public Group getGroup() { return cGroup; }
		
		//{GraphNode}
		public Action getGraphNodeAction_0() { return cGraphNodeAction_0; }
		
		//'node'
		public Keyword getNodeKeyword_1() { return cNodeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_4() { return cEntityAssignment_4; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_4_0() { return cEntityEntityCrossReference_4_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_4_0_1() { return cEntityEntityIDTerminalRuleCall_4_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//attributes+=GraphAttribute*
		public Assignment getAttributesAssignment_6() { return cAttributesAssignment_6; }
		
		//GraphAttribute
		public RuleCall getAttributesGraphAttributeParserRuleCall_6_0() { return cAttributesGraphAttributeParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class GraphAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.GraphAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cValueAttributeCrossReference_3_0 = (CrossReference)cValueAssignment_3.eContents().get(0);
		private final RuleCall cValueAttributeSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cValueAttributeCrossReference_3_0.eContents().get(1);
		
		//GraphAttribute:
		//	{GraphAttribute} name=EString '=' value=[Attribute|STRING];
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphAttribute} name=EString '=' value=[Attribute|STRING]
		public Group getGroup() { return cGroup; }
		
		//{GraphAttribute}
		public Action getGraphAttributeAction_0() { return cGraphAttributeAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//value=[Attribute|STRING]
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//[Attribute|STRING]
		public CrossReference getValueAttributeCrossReference_3_0() { return cValueAttributeCrossReference_3_0; }
		
		//STRING
		public RuleCall getValueAttributeSTRINGTerminalRuleCall_3_0_1() { return cValueAttributeSTRINGTerminalRuleCall_3_0_1; }
	}
	public class EdgeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.Edge");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphEdgeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEdgeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cFromKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFromAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cFromGraphNodeCrossReference_5_0 = (CrossReference)cFromAssignment_5.eContents().get(0);
		private final RuleCall cFromGraphNodeIDTerminalRuleCall_5_0_1 = (RuleCall)cFromGraphNodeCrossReference_5_0.eContents().get(1);
		private final Keyword cToKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cToAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cToGraphNodeCrossReference_7_0 = (CrossReference)cToAssignment_7.eContents().get(0);
		private final RuleCall cToGraphNodeIDTerminalRuleCall_7_0_1 = (RuleCall)cToGraphNodeCrossReference_7_0.eContents().get(1);
		private final Keyword cLabelKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cLabelsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cLabelsGraphEdgeLabelParserRuleCall_10_0 = (RuleCall)cLabelsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Edge GraphEdge:
		//	{GraphEdge}
		//	'edge' name=ID '{'
		//	'from' from=[GraphNode]
		//	'to' to=[GraphNode]
		//	'label' '{'
		//	labels+=GraphEdgeLabel*
		//	'}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphEdge} 'edge' name=ID '{' 'from' from=[GraphNode] 'to' to=[GraphNode] 'label' '{' labels+=GraphEdgeLabel* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//{GraphEdge}
		public Action getGraphEdgeAction_0() { return cGraphEdgeAction_0; }
		
		//'edge'
		public Keyword getEdgeKeyword_1() { return cEdgeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'from'
		public Keyword getFromKeyword_4() { return cFromKeyword_4; }
		
		//from=[GraphNode]
		public Assignment getFromAssignment_5() { return cFromAssignment_5; }
		
		//[GraphNode]
		public CrossReference getFromGraphNodeCrossReference_5_0() { return cFromGraphNodeCrossReference_5_0; }
		
		//ID
		public RuleCall getFromGraphNodeIDTerminalRuleCall_5_0_1() { return cFromGraphNodeIDTerminalRuleCall_5_0_1; }
		
		//'to'
		public Keyword getToKeyword_6() { return cToKeyword_6; }
		
		//to=[GraphNode]
		public Assignment getToAssignment_7() { return cToAssignment_7; }
		
		//[GraphNode]
		public CrossReference getToGraphNodeCrossReference_7_0() { return cToGraphNodeCrossReference_7_0; }
		
		//ID
		public RuleCall getToGraphNodeIDTerminalRuleCall_7_0_1() { return cToGraphNodeIDTerminalRuleCall_7_0_1; }
		
		//'label'
		public Keyword getLabelKeyword_8() { return cLabelKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//labels+=GraphEdgeLabel*
		public Assignment getLabelsAssignment_10() { return cLabelsAssignment_10; }
		
		//GraphEdgeLabel
		public RuleCall getLabelsGraphEdgeLabelParserRuleCall_10_0() { return cLabelsGraphEdgeLabelParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class GraphEdgeLabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.GraphEdgeLabel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphEdgeLabelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeDataTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeDataTypeEStringParserRuleCall_3_0_1 = (RuleCall)cTypeDataTypeCrossReference_3_0.eContents().get(1);
		
		//GraphEdgeLabel:
		//	{GraphEdgeLabel} name=EString ':' type=[DataType|EString]?;
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphEdgeLabel} name=EString ':' type=[DataType|EString]?
		public Group getGroup() { return cGroup; }
		
		//{GraphEdgeLabel}
		public Action getGraphEdgeLabelAction_0() { return cGraphEdgeLabelAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=[DataType|EString]?
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[DataType|EString]
		public CrossReference getTypeDataTypeCrossReference_3_0() { return cTypeDataTypeCrossReference_3_0; }
		
		//EString
		public RuleCall getTypeDataTypeEStringParserRuleCall_3_0_1() { return cTypeDataTypeEStringParserRuleCall_3_0_1; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrimitiveDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCustomDataTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEntityParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//DataType:
		//	PrimitiveDataType | CustomDataType | Entity;
		@Override public ParserRule getRule() { return rule; }
		
		//PrimitiveDataType | CustomDataType | Entity
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PrimitiveDataType
		public RuleCall getPrimitiveDataTypeParserRuleCall_0() { return cPrimitiveDataTypeParserRuleCall_0; }
		
		//CustomDataType
		public RuleCall getCustomDataTypeParserRuleCall_1() { return cCustomDataTypeParserRuleCall_1; }
		
		//Entity
		public RuleCall getEntityParserRuleCall_2() { return cEntityParserRuleCall_2; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class PrimitiveDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.PrimitiveDataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPrimitiveDataTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDatatypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//PrimitiveDataType:
		//	{PrimitiveDataType}
		//	'datatype'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{PrimitiveDataType} 'datatype' name=EString
		public Group getGroup() { return cGroup; }
		
		//{PrimitiveDataType}
		public Action getPrimitiveDataTypeAction_0() { return cPrimitiveDataTypeAction_0; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_1() { return cDatatypeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class CustomDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.CustomDataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCustomDataTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCustomDatatypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsDataTypeItemParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CustomDataType:
		//	{CustomDataType}
		//	'custom-datatype'
		//	name=EString
		//	'{'
		//	elements+=DataTypeItem*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{CustomDataType} 'custom-datatype' name=EString '{' elements+=DataTypeItem* '}'
		public Group getGroup() { return cGroup; }
		
		//{CustomDataType}
		public Action getCustomDataTypeAction_0() { return cCustomDataTypeAction_0; }
		
		//'custom-datatype'
		public Keyword getCustomDatatypeKeyword_1() { return cCustomDatatypeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//elements+=DataTypeItem*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }
		
		//DataTypeItem
		public RuleCall getElementsDataTypeItemParserRuleCall_4_0() { return cElementsDataTypeItemParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Assignment cRelationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRelationsRelationParserRuleCall_4_0 = (RuleCall)cRelationsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entity:
		//	'entity'
		//	name=EString
		//	'{'
		//	attributes+=Attribute*
		//	relations+=Relation*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'entity' name=EString '{' attributes+=Attribute* relations+=Relation* '}'
		public Group getGroup() { return cGroup; }
		
		//'entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_0() { return cAttributesAttributeParserRuleCall_3_0; }
		
		//relations+=Relation*
		public Assignment getRelationsAssignment_4() { return cRelationsAssignment_4; }
		
		//Relation
		public RuleCall getRelationsRelationParserRuleCall_4_0() { return cRelationsRelationParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeDataTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeDataTypeEStringParserRuleCall_2_0_1 = (RuleCall)cTypeDataTypeCrossReference_2_0.eContents().get(1);
		
		//Attribute:
		//	name=EString ':' type=[DataType|EString]?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString ':' type=[DataType|EString]?
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=[DataType|EString]?
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[DataType|EString]
		public CrossReference getTypeDataTypeCrossReference_2_0() { return cTypeDataTypeCrossReference_2_0; }
		
		//EString
		public RuleCall getTypeDataTypeEStringParserRuleCall_2_0_1() { return cTypeDataTypeEStringParserRuleCall_2_0_1; }
	}
	public class DataTypeItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.DataTypeItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataTypeItemAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeDataTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeDataTypeEStringParserRuleCall_3_0_1 = (RuleCall)cTypeDataTypeCrossReference_3_0.eContents().get(1);
		
		//DataTypeItem:
		//	{DataTypeItem} name=EString ':' type=[DataType|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//{DataTypeItem} name=EString ':' type=[DataType|EString]
		public Group getGroup() { return cGroup; }
		
		//{DataTypeItem}
		public Action getDataTypeItemAction_0() { return cDataTypeItemAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=[DataType|EString]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[DataType|EString]
		public CrossReference getTypeDataTypeCrossReference_3_0() { return cTypeDataTypeCrossReference_3_0; }
		
		//EString
		public RuleCall getTypeDataTypeEStringParserRuleCall_3_0_1() { return cTypeDataTypeEStringParserRuleCall_3_0_1; }
	}
	public class RelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.Relation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cIsContainmentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsContainmentColonKeyword_2_0 = (Keyword)cIsContainmentAssignment_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeEntityCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeEntityEStringParserRuleCall_4_0_1 = (RuleCall)cTypeEntityCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cFullStopKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOppositeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cOppositeRelationCrossReference_5_1_0 = (CrossReference)cOppositeAssignment_5_1.eContents().get(0);
		private final RuleCall cOppositeRelationEStringParserRuleCall_5_1_0_1 = (RuleCall)cOppositeRelationCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCardinalityAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_6_1_0 = (RuleCall)cCardinalityAssignment_6_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		
		//Relation:
		//	{Relation} name=EString
		//	isContainment?=':'?
		//	'->'
		//	type=[Entity|EString] ('.' opposite=[Relation|EString])? ('[' cardinality=Cardinality ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Relation} name=EString isContainment?=':'? '->' type=[Entity|EString] ('.' opposite=[Relation|EString])? ('['
		//cardinality=Cardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//{Relation}
		public Action getRelationAction_0() { return cRelationAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//isContainment?=':'?
		public Assignment getIsContainmentAssignment_2() { return cIsContainmentAssignment_2; }
		
		//':'
		public Keyword getIsContainmentColonKeyword_2_0() { return cIsContainmentColonKeyword_2_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }
		
		//type=[Entity|EString]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[Entity|EString]
		public CrossReference getTypeEntityCrossReference_4_0() { return cTypeEntityCrossReference_4_0; }
		
		//EString
		public RuleCall getTypeEntityEStringParserRuleCall_4_0_1() { return cTypeEntityEStringParserRuleCall_4_0_1; }
		
		//('.' opposite=[Relation|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'.'
		public Keyword getFullStopKeyword_5_0() { return cFullStopKeyword_5_0; }
		
		//opposite=[Relation|EString]
		public Assignment getOppositeAssignment_5_1() { return cOppositeAssignment_5_1; }
		
		//[Relation|EString]
		public CrossReference getOppositeRelationCrossReference_5_1_0() { return cOppositeRelationCrossReference_5_1_0; }
		
		//EString
		public RuleCall getOppositeRelationEStringParserRuleCall_5_1_0_1() { return cOppositeRelationEStringParserRuleCall_5_1_0_1; }
		
		//('[' cardinality=Cardinality ']')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }
		
		//cardinality=Cardinality
		public Assignment getCardinalityAssignment_6_1() { return cCardinalityAssignment_6_1; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_6_1_0() { return cCardinalityCardinalityEnumRuleCall_6_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6_2() { return cRightSquareBracketKeyword_6_2; }
	}
	public class EBooleanObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.EBooleanObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBooleanObject ecore::EBooleanObject:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	public class CardinalityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonML.Cardinality");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cZero_oneEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cZero_one01Keyword_0_0 = (Keyword)cZero_oneEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOneEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOne1Keyword_1_0 = (Keyword)cOneEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cZero_manyEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cZero_many0Keyword_2_0 = (Keyword)cZero_manyEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cOne_manyEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cOne_manyAsteriskKeyword_3_0 = (Keyword)cOne_manyEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Cardinality:
		//	zero_one='0..1' | one='1' | zero_many='0..*' | one_many='*';
		public EnumRule getRule() { return rule; }
		
		//zero_one='0..1' | one='1' | zero_many='0..*' | one_many='*'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//zero_one='0..1'
		public EnumLiteralDeclaration getZero_oneEnumLiteralDeclaration_0() { return cZero_oneEnumLiteralDeclaration_0; }
		
		//'0..1'
		public Keyword getZero_one01Keyword_0_0() { return cZero_one01Keyword_0_0; }
		
		//one='1'
		public EnumLiteralDeclaration getOneEnumLiteralDeclaration_1() { return cOneEnumLiteralDeclaration_1; }
		
		//'1'
		public Keyword getOne1Keyword_1_0() { return cOne1Keyword_1_0; }
		
		//zero_many='0..*'
		public EnumLiteralDeclaration getZero_manyEnumLiteralDeclaration_2() { return cZero_manyEnumLiteralDeclaration_2; }
		
		//'0..*'
		public Keyword getZero_many0Keyword_2_0() { return cZero_many0Keyword_2_0; }
		
		//one_many='*'
		public EnumLiteralDeclaration getOne_manyEnumLiteralDeclaration_3() { return cOne_manyEnumLiteralDeclaration_3; }
		
		//'*'
		public Keyword getOne_manyAsteriskKeyword_3_0() { return cOne_manyAsteriskKeyword_3_0; }
	}
	
	private final ModelElements pModel;
	private final DatabaseElements pDatabase;
	private final KeyValueDBElements pKeyValueDB;
	private final KeyValueElementElements pKeyValueElement;
	private final DocumentDBElements pDocumentDB;
	private final DocumentDBCollectionElements pDocumentDBCollection;
	private final RelationalDBElements pRelationalDB;
	private final TableElements pTable;
	private final IndexSpecElements pIndexSpec;
	private final IdSpecElements pIdSpec;
	private final GraphDBElements pGraphDB;
	private final NodeElements pNode;
	private final GraphAttributeElements pGraphAttribute;
	private final EdgeElements pEdge;
	private final GraphEdgeLabelElements pGraphEdgeLabel;
	private final DataTypeElements pDataType;
	private final EStringElements pEString;
	private final PrimitiveDataTypeElements pPrimitiveDataType;
	private final CustomDataTypeElements pCustomDataType;
	private final EntityElements pEntity;
	private final AttributeElements pAttribute;
	private final DataTypeItemElements pDataTypeItem;
	private final RelationElements pRelation;
	private final CardinalityElements eCardinality;
	private final EBooleanObjectElements pEBooleanObject;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TyphonMLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pDatabase = new DatabaseElements();
		this.pKeyValueDB = new KeyValueDBElements();
		this.pKeyValueElement = new KeyValueElementElements();
		this.pDocumentDB = new DocumentDBElements();
		this.pDocumentDBCollection = new DocumentDBCollectionElements();
		this.pRelationalDB = new RelationalDBElements();
		this.pTable = new TableElements();
		this.pIndexSpec = new IndexSpecElements();
		this.pIdSpec = new IdSpecElements();
		this.pGraphDB = new GraphDBElements();
		this.pNode = new NodeElements();
		this.pGraphAttribute = new GraphAttributeElements();
		this.pEdge = new EdgeElements();
		this.pGraphEdgeLabel = new GraphEdgeLabelElements();
		this.pDataType = new DataTypeElements();
		this.pEString = new EStringElements();
		this.pPrimitiveDataType = new PrimitiveDataTypeElements();
		this.pCustomDataType = new CustomDataTypeElements();
		this.pEntity = new EntityElements();
		this.pAttribute = new AttributeElements();
		this.pDataTypeItem = new DataTypeItemElements();
		this.pRelation = new RelationElements();
		this.eCardinality = new CardinalityElements();
		this.pEBooleanObject = new EBooleanObjectElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.typhon.dsls.xtext.TyphonML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	{Model} dataTypes+=DataType*
	//	databases+=Database*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Database:
	//	RelationalDB | GraphDB | DocumentDB | KeyValueDB;
	public DatabaseElements getDatabaseAccess() {
		return pDatabase;
	}
	
	public ParserRule getDatabaseRule() {
		return getDatabaseAccess().getRule();
	}
	
	//KeyValueDB:
	//	{KeyValueDB}
	//	'keyvaluedb' name=ID '{'
	//	elements+=KeyValueElement*
	//	'}';
	public KeyValueDBElements getKeyValueDBAccess() {
		return pKeyValueDB;
	}
	
	public ParserRule getKeyValueDBRule() {
		return getKeyValueDBAccess().getRule();
	}
	
	//KeyValueElement:
	//	{KeyValueElement} key=ID '->' entity=[Entity] '{'
	//	values+=[DataType|EString]?
	//	'}';
	public KeyValueElementElements getKeyValueElementAccess() {
		return pKeyValueElement;
	}
	
	public ParserRule getKeyValueElementRule() {
		return getKeyValueElementAccess().getRule();
	}
	
	//DocumentDB:
	//	{DocumentDB}
	//	'documentdb' name=ID '{'
	//	collections+=DocumentDBCollection*
	//	'}';
	public DocumentDBElements getDocumentDBAccess() {
		return pDocumentDB;
	}
	
	public ParserRule getDocumentDBRule() {
		return getDocumentDBAccess().getRule();
	}
	
	//DocumentDBCollection Collection:
	//	{Collection} name=ID ':' entity=[Entity];
	public DocumentDBCollectionElements getDocumentDBCollectionAccess() {
		return pDocumentDBCollection;
	}
	
	public ParserRule getDocumentDBCollectionRule() {
		return getDocumentDBCollectionAccess().getRule();
	}
	
	//RelationalDB:
	//	{RelationalDB}
	//	'relationaldb' name=ID '{'
	//	tables+=Table*
	//	'}';
	public RelationalDBElements getRelationalDBAccess() {
		return pRelationalDB;
	}
	
	public ParserRule getRelationalDBRule() {
		return getRelationalDBAccess().getRule();
	}
	
	//Table:
	//	{Table}
	//	'table' '{'
	//	name=ID ':' entity=[Entity] indexSpec=IndexSpec?
	//	idSpec=IdSpec?
	//	'}';
	public TableElements getTableAccess() {
		return pTable;
	}
	
	public ParserRule getTableRule() {
		return getTableAccess().getRule();
	}
	
	//IndexSpec:
	//	{IndexSpec}
	//	'index' name=ID '{'
	//	attributes+=[Attribute|STRING]*
	//	// (references+=[Attribute|STRING])*
	//	'}';
	public IndexSpecElements getIndexSpecAccess() {
		return pIndexSpec;
	}
	
	public ParserRule getIndexSpecRule() {
		return getIndexSpecAccess().getRule();
	}
	
	//IdSpec:
	//	{IdSpec}
	//	'id' '{'
	//	attributes+=[Attribute|STRING]*
	//	'}';
	public IdSpecElements getIdSpecAccess() {
		return pIdSpec;
	}
	
	public ParserRule getIdSpecRule() {
		return getIdSpecAccess().getRule();
	}
	
	//GraphDB:
	//	{GraphDB}
	//	'graphdb' name=ID '{'
	//	nodes+=Node*
	//	edges+=Edge*
	//	'}';
	public GraphDBElements getGraphDBAccess() {
		return pGraphDB;
	}
	
	public ParserRule getGraphDBRule() {
		return getGraphDBAccess().getRule();
	}
	
	//Node GraphNode:
	//	{GraphNode}
	//	'node' name=ID ':' entity=[Entity] '{'
	//	attributes+=GraphAttribute*
	//	'}';
	public NodeElements getNodeAccess() {
		return pNode;
	}
	
	public ParserRule getNodeRule() {
		return getNodeAccess().getRule();
	}
	
	//GraphAttribute:
	//	{GraphAttribute} name=EString '=' value=[Attribute|STRING];
	public GraphAttributeElements getGraphAttributeAccess() {
		return pGraphAttribute;
	}
	
	public ParserRule getGraphAttributeRule() {
		return getGraphAttributeAccess().getRule();
	}
	
	//Edge GraphEdge:
	//	{GraphEdge}
	//	'edge' name=ID '{'
	//	'from' from=[GraphNode]
	//	'to' to=[GraphNode]
	//	'label' '{'
	//	labels+=GraphEdgeLabel*
	//	'}'
	//	'}';
	public EdgeElements getEdgeAccess() {
		return pEdge;
	}
	
	public ParserRule getEdgeRule() {
		return getEdgeAccess().getRule();
	}
	
	//GraphEdgeLabel:
	//	{GraphEdgeLabel} name=EString ':' type=[DataType|EString]?;
	public GraphEdgeLabelElements getGraphEdgeLabelAccess() {
		return pGraphEdgeLabel;
	}
	
	public ParserRule getGraphEdgeLabelRule() {
		return getGraphEdgeLabelAccess().getRule();
	}
	
	//DataType:
	//	PrimitiveDataType | CustomDataType | Entity;
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//PrimitiveDataType:
	//	{PrimitiveDataType}
	//	'datatype'
	//	name=EString;
	public PrimitiveDataTypeElements getPrimitiveDataTypeAccess() {
		return pPrimitiveDataType;
	}
	
	public ParserRule getPrimitiveDataTypeRule() {
		return getPrimitiveDataTypeAccess().getRule();
	}
	
	//CustomDataType:
	//	{CustomDataType}
	//	'custom-datatype'
	//	name=EString
	//	'{'
	//	elements+=DataTypeItem*
	//	'}';
	public CustomDataTypeElements getCustomDataTypeAccess() {
		return pCustomDataType;
	}
	
	public ParserRule getCustomDataTypeRule() {
		return getCustomDataTypeAccess().getRule();
	}
	
	//Entity:
	//	'entity'
	//	name=EString
	//	'{'
	//	attributes+=Attribute*
	//	relations+=Relation*
	//	'}';
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Attribute:
	//	name=EString ':' type=[DataType|EString]?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//DataTypeItem:
	//	{DataTypeItem} name=EString ':' type=[DataType|EString];
	public DataTypeItemElements getDataTypeItemAccess() {
		return pDataTypeItem;
	}
	
	public ParserRule getDataTypeItemRule() {
		return getDataTypeItemAccess().getRule();
	}
	
	//Relation:
	//	{Relation} name=EString
	//	isContainment?=':'?
	//	'->'
	//	type=[Entity|EString] ('.' opposite=[Relation|EString])? ('[' cardinality=Cardinality ']')?;
	public RelationElements getRelationAccess() {
		return pRelation;
	}
	
	public ParserRule getRelationRule() {
		return getRelationAccess().getRule();
	}
	
	//enum Cardinality:
	//	zero_one='0..1' | one='1' | zero_many='0..*' | one_many='*';
	public CardinalityElements getCardinalityAccess() {
		return eCardinality;
	}
	
	public EnumRule getCardinalityRule() {
		return getCardinalityAccess().getRule();
	}
	
	//EBooleanObject ecore::EBooleanObject:
	//	'true' | 'false';
	public EBooleanObjectElements getEBooleanObjectAccess() {
		return pEBooleanObject;
	}
	
	public ParserRule getEBooleanObjectRule() {
		return getEBooleanObjectAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
