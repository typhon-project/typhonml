/*
 * generated by Xtext 2.12.0
 */
package org.typhon.dsls.xtext.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.typhon.dsls.sirius.typhonml.DataType
import org.typhon.dsls.sirius.typhonml.Database
import org.typhon.dsls.sirius.typhonml.Model
import org.typhon.dsls.sirius.typhonml.RelationalDB
import org.typhon.dsls.sirius.typhonml.Table
import org.typhon.dsls.xtext.services.TyphonMLGrammarAccess

class TyphonMLFormatter extends AbstractFormatter2 {
	
	@Inject extension TyphonMLGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (DataType dataType : model.getDataTypes()) {
			dataType.format;
		}
		for (Database database : model.getDatabases()) {
			database.format;
		}
	}

	def dispatch void format(RelationalDB relationalDB, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Table table : relationalDB.getTables()) {
			table.format;
		}
	}
	
	// TODO: implement for Table, CustomDataType, Entity
}
